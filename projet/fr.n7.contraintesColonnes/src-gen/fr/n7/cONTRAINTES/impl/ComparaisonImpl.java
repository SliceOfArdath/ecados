/**
 * generated by Xtext 2.23.0
 */
package fr.n7.cONTRAINTES.impl;

import fr.n7.cONTRAINTES.CONTRAINTESPackage;
import fr.n7.cONTRAINTES.Comparaison;
import fr.n7.cONTRAINTES.ComparateurType;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comparaison</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.cONTRAINTES.impl.ComparaisonImpl#getComparateur <em>Comparateur</em>}</li>
 *   <li>{@link fr.n7.cONTRAINTES.impl.ComparaisonImpl#getConstante <em>Constante</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComparaisonImpl extends ExpressionImpl implements Comparaison
{
  /**
	 * The default value of the '{@link #getComparateur() <em>Comparateur</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getComparateur()
	 * @generated
	 * @ordered
	 */
  protected static final ComparateurType COMPARATEUR_EDEFAULT = ComparateurType.INF;

  /**
	 * The cached value of the '{@link #getComparateur() <em>Comparateur</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getComparateur()
	 * @generated
	 * @ordered
	 */
  protected ComparateurType comparateur = COMPARATEUR_EDEFAULT;

  /**
	 * The default value of the '{@link #getConstante() <em>Constante</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getConstante()
	 * @generated
	 * @ordered
	 */
  protected static final float CONSTANTE_EDEFAULT = 0.0F;

  /**
	 * The cached value of the '{@link #getConstante() <em>Constante</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getConstante()
	 * @generated
	 * @ordered
	 */
  protected float constante = CONSTANTE_EDEFAULT;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ComparaisonImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return CONTRAINTESPackage.Literals.COMPARAISON;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public ComparateurType getComparateur()
  {
		return comparateur;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setComparateur(ComparateurType newComparateur)
  {
		ComparateurType oldComparateur = comparateur;
		comparateur = newComparateur == null ? COMPARATEUR_EDEFAULT : newComparateur;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CONTRAINTESPackage.COMPARAISON__COMPARATEUR, oldComparateur, comparateur));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public float getConstante()
  {
		return constante;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setConstante(float newConstante)
  {
		float oldConstante = constante;
		constante = newConstante;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CONTRAINTESPackage.COMPARAISON__CONSTANTE, oldConstante, constante));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case CONTRAINTESPackage.COMPARAISON__COMPARATEUR:
				return getComparateur();
			case CONTRAINTESPackage.COMPARAISON__CONSTANTE:
				return getConstante();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case CONTRAINTESPackage.COMPARAISON__COMPARATEUR:
				setComparateur((ComparateurType)newValue);
				return;
			case CONTRAINTESPackage.COMPARAISON__CONSTANTE:
				setConstante((Float)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case CONTRAINTESPackage.COMPARAISON__COMPARATEUR:
				setComparateur(COMPARATEUR_EDEFAULT);
				return;
			case CONTRAINTESPackage.COMPARAISON__CONSTANTE:
				setConstante(CONSTANTE_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case CONTRAINTESPackage.COMPARAISON__COMPARATEUR:
				return comparateur != COMPARATEUR_EDEFAULT;
			case CONTRAINTESPackage.COMPARAISON__CONSTANTE:
				return constante != CONSTANTE_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (comparateur: ");
		result.append(comparateur);
		result.append(", constante: ");
		result.append(constante);
		result.append(')');
		return result.toString();
	}

} //ComparaisonImpl
